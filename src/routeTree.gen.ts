/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as WorkshopImport } from './routes/workshop';
import { Route as SheltersImport } from './routes/shelters';
import { Route as SchoolsImport } from './routes/schools';
import { Route as SanctuaryImport } from './routes/sanctuary';
import { Route as ProjectsImport } from './routes/projects';
import { Route as GardenSofasImport } from './routes/garden-sofas';
import { Route as GardenIdeasImport } from './routes/garden-ideas';
import { Route as DeckingImport } from './routes/decking';
import { Route as CosyBenchImport } from './routes/cosy-bench';
import { Route as ContactImport } from './routes/contact';
import { Route as CompostingToiletImport } from './routes/composting-toilet';
import { Route as AdventureImport } from './routes/adventure';
import { Route as AboutImport } from './routes/about';
import { Route as IndexImport } from './routes/index';

// Create/Update Routes

const WorkshopRoute = WorkshopImport.update({
  id: '/workshop',
  path: '/workshop',
  getParentRoute: () => rootRoute,
} as any);

const SheltersRoute = SheltersImport.update({
  id: '/shelters',
  path: '/shelters',
  getParentRoute: () => rootRoute,
} as any);

const SchoolsRoute = SchoolsImport.update({
  id: '/schools',
  path: '/schools',
  getParentRoute: () => rootRoute,
} as any);

const SanctuaryRoute = SanctuaryImport.update({
  id: '/sanctuary',
  path: '/sanctuary',
  getParentRoute: () => rootRoute,
} as any);

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any);

const GardenSofasRoute = GardenSofasImport.update({
  id: '/garden-sofas',
  path: '/garden-sofas',
  getParentRoute: () => rootRoute,
} as any);

const GardenIdeasRoute = GardenIdeasImport.update({
  id: '/garden-ideas',
  path: '/garden-ideas',
  getParentRoute: () => rootRoute,
} as any);

const DeckingRoute = DeckingImport.update({
  id: '/decking',
  path: '/decking',
  getParentRoute: () => rootRoute,
} as any);

const CosyBenchRoute = CosyBenchImport.update({
  id: '/cosy-bench',
  path: '/cosy-bench',
  getParentRoute: () => rootRoute,
} as any);

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any);

const CompostingToiletRoute = CompostingToiletImport.update({
  id: '/composting-toilet',
  path: '/composting-toilet',
  getParentRoute: () => rootRoute,
} as any);

const AdventureRoute = AdventureImport.update({
  id: '/adventure',
  path: '/adventure',
  getParentRoute: () => rootRoute,
} as any);

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/about': {
      id: '/about';
      path: '/about';
      fullPath: '/about';
      preLoaderRoute: typeof AboutImport;
      parentRoute: typeof rootRoute;
    };
    '/adventure': {
      id: '/adventure';
      path: '/adventure';
      fullPath: '/adventure';
      preLoaderRoute: typeof AdventureImport;
      parentRoute: typeof rootRoute;
    };
    '/composting-toilet': {
      id: '/composting-toilet';
      path: '/composting-toilet';
      fullPath: '/composting-toilet';
      preLoaderRoute: typeof CompostingToiletImport;
      parentRoute: typeof rootRoute;
    };
    '/contact': {
      id: '/contact';
      path: '/contact';
      fullPath: '/contact';
      preLoaderRoute: typeof ContactImport;
      parentRoute: typeof rootRoute;
    };
    '/cosy-bench': {
      id: '/cosy-bench';
      path: '/cosy-bench';
      fullPath: '/cosy-bench';
      preLoaderRoute: typeof CosyBenchImport;
      parentRoute: typeof rootRoute;
    };
    '/decking': {
      id: '/decking';
      path: '/decking';
      fullPath: '/decking';
      preLoaderRoute: typeof DeckingImport;
      parentRoute: typeof rootRoute;
    };
    '/garden-ideas': {
      id: '/garden-ideas';
      path: '/garden-ideas';
      fullPath: '/garden-ideas';
      preLoaderRoute: typeof GardenIdeasImport;
      parentRoute: typeof rootRoute;
    };
    '/garden-sofas': {
      id: '/garden-sofas';
      path: '/garden-sofas';
      fullPath: '/garden-sofas';
      preLoaderRoute: typeof GardenSofasImport;
      parentRoute: typeof rootRoute;
    };
    '/projects': {
      id: '/projects';
      path: '/projects';
      fullPath: '/projects';
      preLoaderRoute: typeof ProjectsImport;
      parentRoute: typeof rootRoute;
    };
    '/sanctuary': {
      id: '/sanctuary';
      path: '/sanctuary';
      fullPath: '/sanctuary';
      preLoaderRoute: typeof SanctuaryImport;
      parentRoute: typeof rootRoute;
    };
    '/schools': {
      id: '/schools';
      path: '/schools';
      fullPath: '/schools';
      preLoaderRoute: typeof SchoolsImport;
      parentRoute: typeof rootRoute;
    };
    '/shelters': {
      id: '/shelters';
      path: '/shelters';
      fullPath: '/shelters';
      preLoaderRoute: typeof SheltersImport;
      parentRoute: typeof rootRoute;
    };
    '/workshop': {
      id: '/workshop';
      path: '/workshop';
      fullPath: '/workshop';
      preLoaderRoute: typeof WorkshopImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/about': typeof AboutRoute;
  '/adventure': typeof AdventureRoute;
  '/composting-toilet': typeof CompostingToiletRoute;
  '/contact': typeof ContactRoute;
  '/cosy-bench': typeof CosyBenchRoute;
  '/decking': typeof DeckingRoute;
  '/garden-ideas': typeof GardenIdeasRoute;
  '/garden-sofas': typeof GardenSofasRoute;
  '/projects': typeof ProjectsRoute;
  '/sanctuary': typeof SanctuaryRoute;
  '/schools': typeof SchoolsRoute;
  '/shelters': typeof SheltersRoute;
  '/workshop': typeof WorkshopRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/about': typeof AboutRoute;
  '/adventure': typeof AdventureRoute;
  '/composting-toilet': typeof CompostingToiletRoute;
  '/contact': typeof ContactRoute;
  '/cosy-bench': typeof CosyBenchRoute;
  '/decking': typeof DeckingRoute;
  '/garden-ideas': typeof GardenIdeasRoute;
  '/garden-sofas': typeof GardenSofasRoute;
  '/projects': typeof ProjectsRoute;
  '/sanctuary': typeof SanctuaryRoute;
  '/schools': typeof SchoolsRoute;
  '/shelters': typeof SheltersRoute;
  '/workshop': typeof WorkshopRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/about': typeof AboutRoute;
  '/adventure': typeof AdventureRoute;
  '/composting-toilet': typeof CompostingToiletRoute;
  '/contact': typeof ContactRoute;
  '/cosy-bench': typeof CosyBenchRoute;
  '/decking': typeof DeckingRoute;
  '/garden-ideas': typeof GardenIdeasRoute;
  '/garden-sofas': typeof GardenSofasRoute;
  '/projects': typeof ProjectsRoute;
  '/sanctuary': typeof SanctuaryRoute;
  '/schools': typeof SchoolsRoute;
  '/shelters': typeof SheltersRoute;
  '/workshop': typeof WorkshopRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/about'
    | '/adventure'
    | '/composting-toilet'
    | '/contact'
    | '/cosy-bench'
    | '/decking'
    | '/garden-ideas'
    | '/garden-sofas'
    | '/projects'
    | '/sanctuary'
    | '/schools'
    | '/shelters'
    | '/workshop';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/about'
    | '/adventure'
    | '/composting-toilet'
    | '/contact'
    | '/cosy-bench'
    | '/decking'
    | '/garden-ideas'
    | '/garden-sofas'
    | '/projects'
    | '/sanctuary'
    | '/schools'
    | '/shelters'
    | '/workshop';
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/adventure'
    | '/composting-toilet'
    | '/contact'
    | '/cosy-bench'
    | '/decking'
    | '/garden-ideas'
    | '/garden-sofas'
    | '/projects'
    | '/sanctuary'
    | '/schools'
    | '/shelters'
    | '/workshop';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AboutRoute: typeof AboutRoute;
  AdventureRoute: typeof AdventureRoute;
  CompostingToiletRoute: typeof CompostingToiletRoute;
  ContactRoute: typeof ContactRoute;
  CosyBenchRoute: typeof CosyBenchRoute;
  DeckingRoute: typeof DeckingRoute;
  GardenIdeasRoute: typeof GardenIdeasRoute;
  GardenSofasRoute: typeof GardenSofasRoute;
  ProjectsRoute: typeof ProjectsRoute;
  SanctuaryRoute: typeof SanctuaryRoute;
  SchoolsRoute: typeof SchoolsRoute;
  SheltersRoute: typeof SheltersRoute;
  WorkshopRoute: typeof WorkshopRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AdventureRoute: AdventureRoute,
  CompostingToiletRoute: CompostingToiletRoute,
  ContactRoute: ContactRoute,
  CosyBenchRoute: CosyBenchRoute,
  DeckingRoute: DeckingRoute,
  GardenIdeasRoute: GardenIdeasRoute,
  GardenSofasRoute: GardenSofasRoute,
  ProjectsRoute: ProjectsRoute,
  SanctuaryRoute: SanctuaryRoute,
  SchoolsRoute: SchoolsRoute,
  SheltersRoute: SheltersRoute,
  WorkshopRoute: WorkshopRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/adventure",
        "/composting-toilet",
        "/contact",
        "/cosy-bench",
        "/decking",
        "/garden-ideas",
        "/garden-sofas",
        "/projects",
        "/sanctuary",
        "/schools",
        "/shelters",
        "/workshop"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/adventure": {
      "filePath": "adventure.tsx"
    },
    "/composting-toilet": {
      "filePath": "composting-toilet.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/cosy-bench": {
      "filePath": "cosy-bench.tsx"
    },
    "/decking": {
      "filePath": "decking.tsx"
    },
    "/garden-ideas": {
      "filePath": "garden-ideas.tsx"
    },
    "/garden-sofas": {
      "filePath": "garden-sofas.tsx"
    },
    "/projects": {
      "filePath": "projects.tsx"
    },
    "/sanctuary": {
      "filePath": "sanctuary.tsx"
    },
    "/schools": {
      "filePath": "schools.tsx"
    },
    "/shelters": {
      "filePath": "shelters.tsx"
    },
    "/workshop": {
      "filePath": "workshop.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
